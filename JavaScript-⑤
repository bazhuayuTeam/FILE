一、表单验证
form表单的属性：acceptCharset 服务器能处理的字符集
                action elements enctype请求的编码类型 length表单控件的数量 method要发送的http的请求get post 
                name 表单的名称
                reset() submit() target发送请求和就收响应的窗口名称
表单的提交三种方式
<input type="submit"/>
<button type="submit"/>
<input type="image"/>

或者js提交表单
var  form = docuemnt.getElementById("form");
form.submit();

阻止提交表单 EventUtil.addHandler(form,"submit",functiuon(event){
  event = EventUtil.getEvent(event);
  EventUtil.prevetnDefault(event);
});

1、共有的表单属性字段
  disabled readOnly name form（指向当前字段所属表单的指针）
  tabIndex（表示当前字段的切换序号）type value
2、共有的表单字段方法
  focus() blur() 
  注意：当一个input元素的type是hidden就不能为这个元素设置focus()方法，
  并且在设置css为display和visibility属性也不能为元素设置focus()方法。
  HTML5属性autofocus自动把焦点移到相应的字段上面。
  
  在默认的情况下，只有表单字段可以获取焦点。对于其他元素来说，当设置tabIndex=-1和调用focus()方法也可以让这些元素获取焦点(opera不支持)
3、共有的表单字段事件
blur change focus


文本框脚本：input textarea：：：：：：：：：：：：：：：：：：：：：：：：：：：：
input ：size maxlength value
textarea：cols rows 
 1、选择脚本
  slect()选择当前文本框的所有文本。这个比较吊
  select事件
 2、取得选中的文本
  selecttionStart selectionEnd
  
 3、选择部分文本
  setSelectionRange(start,end);
  跨浏览器的选择部分文本
  if(input.setSelectionRange){
    input.setSelectionRange(start,end);
  }
  else if(inout.createTextRange){
    var range = input.createTextRange();
    range.collapse(true);
    range.moveStart("character",satrt);
    range.moveEnd("character",end);
    range.select();
    input.focus();
  }
  
  
  
  过滤输入：：：：：：：：：：：：：：：：：：：：：：：
  1、屏蔽字符
  EventUtil.addHandler(input,"keypress",function(event){
    event = EventUtil.getEvent(event);
    EventUtil.preventDefault(event);
  });所有的字符输入都会被屏蔽。
  2、操作剪切板
  beforecopy copy beforecut cut beforepaste paste
  访问剪切板的数据：clipboardDate对象（在IE中这个属性是window的属性。在其他浏览器是event的属性）
  这个属性有三个方法：getDta(MIME类型);setData(MIME类型，text);clearData();
  3、自动焦点切换
  (function(){
    function tabForword(event){
       event = EventUtil.getEvent(event);
        var targrt = EventUtil.getTarget(event);
        if(target.value.length==target.maxLength){
          var form = target.form;
          for(var i=0;i<form.length;i++){
            if(form.elements[i]==target){
              if(form.elements[i+1]){
                form.elements[i+1].focus();
              }
              return;
            }
          }
        }
    }
        var textbox1 = document.getElementById("textTel1");
        var textbox2 = document.getElementById("textTel2");
        var textbox3 = document.getElementById("textTel3");
        EventUtil.addHandler(textbox1,"keyup",tabForword);
        EventUtil.addHandler(textbox2,"keyup",tabForword);
        EventUtil.addHandler(textbox3,"keyup",tabForword);
  })();
  
  HTML5约束验证API
   1、必填字段 required
  <inout type="text" name="username" required/>
  检查字段是否为必填字段
  var required = document.forms[0].elements["username"].required;
  检查是否浏览器是否支持required
  var required = "required" in document.createElement("input");
  2、其他的输入类型
   email url date month week datetime datetime-local time number range ...
   min max step（刻度）
   setUp() setDown()
  3、输入模式 patten
  访问模式
  var pattern = document.forms[0].elements["count"].pattern;
  检查浏览器是否支持pattern
  var isPattern = "pattern" in document.createElement(input);
  4、检查有效性 
   checkValidity()检查某个字段是否有效（依据是前面定义的约束）
   validity告诉你字段为什么有效或无效。  
  5、禁止验证 novalidate属性禁止表单验证
              formnovalidate禁止某个按钮可以不用验证。
              
  
  选择框脚本
  select标签的属性和方法
    add(newOption,relOption)
    multiple options控件集合
    remove(index) selectedIndex选中项的下表
    size
  option的属性和方法
  index lable selected text value
  1、选择选项
  针对只选择一项
   var selectedOption = select.options[select.selectedIndex];
  针对选择多项
  function getSelect(select){
    var result = new Array();
    var option = null;
    for(vari = 0,len = select.options.length;i<len;i++){
      option = select.options[i];
      if(option.selected){
        result.push(option);
      }    
    }
    return result;
  }
  2、添加选项
  第一种方式：Dom方法
  第二种方法：option构造函数 var option =new Option("Option text","Option value"); select.appendChild(option);在IE8之前有问题。
  第三种方法：add() var option = new Option("Option text","Option value"); select.add(option,undefined);
  3、移除选项
  第一种方法：Dom方法
  第二种方法：select.remove(index);
  第三种方法：select.option[index]=null;
  4、移动和重排选项
  移动：Dom的appendChild()方法可以直接把一个选择框的一项移到另一个选择框。吊
  重排序：Dom方法，使用insertBefore()方法。
  
  表单序列化：在javaScript中可以通过type，name，value等属性一起实现对表单的序列化。
  
  
  
  富文本编辑：在页面中嵌入一个包含HTML页面的iframe，通过设置designMode属性(off on-表示页面可编辑)，这个空白的HTML可以被编辑。
  富文本编辑：使用contenditable属性，这个属性可以给页面的任意元素；
  操作富文本：
            实现富文本编辑交互的主要方式；document.execCommand(要执行的命令，是否为当前浏览器提供一个界面的布尔值，执行命令的值)；
  富文本选取：在富文本编辑器中，使用框架的getSelection()方法，可以确定实际选择的文本。这个方法是window对象和document对象的属性
  调用它返回一个表示当前选择文本的Selection对象。还包含很多属性。
  
  

