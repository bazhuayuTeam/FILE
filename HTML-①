HTML 
(1)Doctype的作用？严格模式与混合模式如何区分？它们有何意义？

Doctype的是位于文档的最前面，在html标签前面，这个标签可以告诉浏览器遵循HTML或者是XHTML那种规范。
DOD有三种规范：严格版本，过度版本，以及基于框架HTML的文档。
作用一：告诉浏览器遵循那种HTML或者XHTML规范；
作用二：告诉浏览器的渲染模式；

区分：可以根据文档前面的设置；可以根据盒子模型的不同区分；
    <!-- HTML 4.01 严格型 -->  
    <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"  "http://www.w3.org/TR/html4/strict.dtd">   
      
    <!-- XHTML 1.0 严格型 -->  
    <!DOCTYPE html PUBLIC  "-//W3C//DTD XHTML 1.0 Strict//EN"  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">  
    
    <!-- HTML 4.01 过渡型 -->  
    <!DOCTYPE HTML PUBLIC  "-//W3C//DTD HTML 4.01 Transitional//EN"  "http://www.w3.org/TR/html4/loose.dtd">  
    
意义：几乎所有的浏览器都是支持严格模式和混合模式，严格模式服务于标准规则，而混合模式是服务于老式规则，是一种宽松的向后兼容模式。

（2）HTML5为什么只需写<!DOCTYPE HTML>?
因为HTML5是不遵循SGML规范的，不需要说明DTD,SGML规范是一种标准通用标记语言（以下简称“通用标言”），是一种定义电子文档结构和描述其内容的国际标准语言；
但是需要写DOCTYPE来规范浏览器的行为；

（3）行内元素有哪些？块级元素有哪些？空（void）元素有哪些？
行内元素：span，a，img，image，em,strong,lable,textarea,select...
块级元素：p，div，dl,dt,dd,ul,li,ol,h1-h6,table,from...
空元素:hr,br...

（4）页面导入样式时，使用link和@import有什么区别？
一、link会在页面加载之前加载文档样式。@import会在文档加载完之后再去加载样式。
二、@import只有在IE5以上才会支持，link是html标签不存在兼容性问题。
三、link是HTML提供的，@import提供的。
四、link的权重高于@imoprt。

（5）介绍一下你对浏览器内核的理解？
可以分为两部分：浏览器内核、js引擎
浏览器内核：可以说浏览器最重要最核心的就是浏览器的渲染引擎，也就是浏览器的内核。负责对页面的语法解析和页面的渲染。浏览器渲染引擎决定了渲染页面的内容和页面的格式信息。
不同的浏览器对页面的解析和渲染方式是不同的。这就是为什么开发者需要在不同浏览器进行测试的原因
JS引擎则：解析和执行javascript来实现网页的动态效果。
最开始渲染引擎和JS引擎并没有区分的很明确，后来JS引擎越来越独立，内核就倾向于只指渲染引擎。

（6）常用的浏览器内核有哪些？
大致可以分为几类内核：
1、Trident（IE内核）2、Geoko（firefox内核）3、Webkit（Safari内核,chrome内核原型，在2013年，chrome公司就宣布和苹果公司的Webkit内核分道扬镳）
4、Presto（前Opera内核，现在已近被废弃，Opera现在使用Blank内核） 5、Blank（chrome内核，与Opera一起发开）；

（7）HTML5有哪些新特性、移除了哪些元素？如何处理HTML5新标签的浏览器兼容问题，如何区分HTML和HTML5?
HTML5已形成了最终的标准，概括来讲，它主要是关于图像，位置，存储，多任务等功能的增加。
新增的元素有绘画 canvas ，用于媒介回放的 video 和 audio 元素，本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失，
而sessionStorage的数据在浏览器关闭后自动删除，此外，还新增了以下的几大类元素。
内容元素，article、footer、header、nav、section。
表单控件，calendar、date、time、email、url、search。
控件元素，webworker, websockt, Geolocation。
移出的元素有下列这些：
显现层元素：basefont，big，center，font, s，strike，tt，u。
性能较差元素：frame，frameset，noframes。

如何处理HTML5新标签的浏览器兼容问题？如何区分HTML和HTML5？
处理兼容问题有两种方式：
1.IE8/IE7/IE6支持通过document.方法产生的标签,创建标签，利用这一特性让这些浏览器支持HTML5新标签。
2.使用是html5shim框架
另外，DOCTYPE声明的方式是区分HTML和HTML5标志的一个重要因素，此外，还可以根据新增的结构、功能元素来加以区分。

（8）简述对HTML语义化的理解？
HTML语义化是，根据内容的结构化，选择适合的标签，便于开发者阅读和写出优雅的代码，以及让浏览器爬虫很好的解析。
实现HTML语义化的优点：一、在页面丢失样式的时候能让页面呈现清楚的页面结构。二、有利于SEO（浏览器搜索引擎）：和搜索引擎建立良好的
关系，有助于爬虫抓取信息。三、方便其他设备（屏幕阅读器，蛮人阅读器，移动设备）的解析，以意义的方式渲染页面。四、便于开发团队的开发
维护，有利于网页的重建，是下一步网页重建的重要方向。

（9）浏览器的离线存储怎么使用，工作原理是什么？
离线存储的作用：
一、用户可以离线访问应用，这对于无法保持网络状态的移动用户很重要。
二、由于用户是访问的离线数据，意味这加载速度更快。
三、仅仅加载被修改的文件，避免同一资源对服务器的多次访问。
离线存储的使用：
html页面
<html manifest="cache.manifest">

cache.manifest文件
CACHE MANIFEST
# 注释：需要缓存的文件，无论在线与否，均从缓存里读取
chched.js
cached.css

# 注释：不缓存的文件，无论缓存中存在与否，均从新获取
NETWORK:
uncached.js
uncached.css

# 注释：获取不到资源时的备选路径，如index.html访问失败，则返回404页面
FALLBACK:
index.html 404.html
原理：HTML5的离线存储是基于一个新建的.appcache文件的缓存机制(不是存储技术)，通过这个文件上的解析清单离线存储资源，
这些资源就会像cookie一样被存储了下来。之后当网络在处于离线状态下时，
浏览器会通过被离线存储的数据进行页面展示。

（10）浏览器是怎么对HTML5的离线存储资源进行管理和加载的？
一、在线的情况下，浏览器发现html头部有manifest属性，它会请求manifest文件，如果是第一次访问app，
那么浏览器就会根据manifest文件的内容下载相应的资源并且进行离线存储。如果已经访问过app并且资源已经离线存储了，
那么浏览器就会使用离线的资源加载页面，然后浏览器会对比新的manifest文件与旧的manifest文件，如果文件没有发生改变，
就不做任何操作，如果文件改变了，那么就会重新下载文件中的资源并进行离线存储。
二、离线的情况下，浏览器就直接使用离线存储的资源。

（11）请描述一下cookie和localStorage sessionStorage的区别。
一、存储数据大小的区别，cookie一般是存储4kb，storage的官方建议是5M，存储空间不同；
二、cookie会再服务器和浏览器之间来回的传送，localStorage和sessionStroage不会。
三、localStorage和sessionStorage提供了丰富的接口。
四、localStorage和sessionStorage提供了独立的存储空间。

（12）如何实现浏览器中多个标签页之间的通信？
调用localStorage和sessionStorage。

（13）如何解决WebSocket在低版本浏览器不兼容的情况？
就目前而言，WebSocket是最好的web通信解决方案，但是是在IE10才开始支持。
Adobe Flash Socket 、 ActiveX HTMLFile (IE) 、 基于 multipart 编码发送 XHR 、 基于长轮询的 XHR 

（14）iframe的优缺点？
一、优点
        解决加载缓慢的第三方资源，如图片，广告等的加载问题。
        并行加载脚本。
        
二、缺点
        iframe会阻塞Onload事件的加载。
        即是内容为空也需要加载时间。
        没有语义。

（15）Lable的作用是什么？怎么使用的？
一、作用：Label不会向浏览器呈现特殊的效果，但是当你使用这个标签的时候，意思就是当你点击标签文本的时候，鼠标焦点会自动的
聚焦到绑定的表单控件上面。
二、使用：Lable有两个重要的属性 for  accesskey 
            for属性表示是为那个标签服务的，意思就是点击文本，那个标签获取到焦点，可以为html页面的ID或者是name；
            accesskey定义了访问这个控件的热键（快捷键）；但是不能和浏览器的快捷键冲突，如果冲突，以浏览器的快捷键为主。




















